# SPDX-License-Identifier: MIT
# Copyright (c) 2023. University of Texas at Austin. All rights reserved.

name: Docker / Ubuntu 22.04 / PREP / gasnet-smp-par
run-name: docker-prep-smp-ubuntu-2204 performed by @${{ github.actor }}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prep-smp-ubuntu-2204-docker:
    name: gcc / ${{ matrix.build-type }}
    runs-on: ubuntu-22.04
    env:
      ROOT_IMAGE_NAME: pando-rt
      ROOT_IMAGE_VERSION: latest
      IMAGE_NAME: pando
      IMAGE_VERSION: ${{ matrix.build-type }}
      CONTAINER_SRC_DIR: "/pando"
      CONTAINER_BUILD_DIR: "/pando/dockerbuild"
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        build-type: ['Release', 'RelWithDebInfo']

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.CI_PAT }}
        submodules: recursive

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: network=host

    - name: Build root Docker image
      uses: docker/build-push-action@v4
      with:
        context: docker
        push: false
        load: true
        file: ./pando-rt/docker/Dockerfile
        tags: "${{ env.ROOT_IMAGE_NAME }}:${{ env.ROOT_IMAGE_VERSION }}"
        build-args: |
          "SRC_DIR=${{ env.CONTAINER_SRC_DIR }}"
          "BUILD_DIR=${{ env.CONTAINER_BUILD_DIR }}"
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build development Docker image
      uses: docker/build-push-action@v4
      with:
        context: docker
        push: false
        load: true
        file: ./Dockerfile.dev
        tags: "${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}"
        build-args: |
          "SRC_DIR=${{ env.CONTAINER_SRC_DIR }}"
          "BUILD_DIR=${{ env.CONTAINER_BUILD_DIR }}"
          "UNAME=$(whoami)"
          "UID=$(id -u)"
          "GID=$(id -g)"
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Check pre-commit
      timeout-minutes: 10
      run: |
        IMAGE_NAME="${{ env.IMAGE_NAME }}" \
          VERSION="${{ env.IMAGE_VERSION }}" \
          SRC_DIR="$GITHUB_WORKSPACE" \
          make docker-pre-commit

    - name: Configure
      timeout-minutes: 10
      run: |
        CONTAINER_CMD="make setup" \
          CONTAINER_OPTS="-e=BUILD_TYPE=${{ matrix.build-type }}" \
          IMAGE_NAME="${{ env.IMAGE_NAME }}" \
          VERSION="${{ env.IMAGE_VERSION }}" \
          SRC_DIR="$GITHUB_WORKSPACE" \
          make docker

    - name: Build
      timeout-minutes: 10
      run: |
        echo "ls GITHUB_WORKSPACE"
        ls $GITHUB_WORKSPACE
        CONTAINER_CMD="make -j8" \
          IMAGE_NAME="${{ env.IMAGE_NAME }}" \
          VERSION="${{ env.IMAGE_VERSION }}" \
          CONTAINER_WORKDIR="${{ env.CONTAINER_BUILD_DIR }}" \
          SRC_DIR="$GITHUB_WORKSPACE" \
          make docker

    - name: Run Smoke Test
      timeout-minutes: 10
      env:
        PANDO_PREP_LOG_LEVEL: warning
      run: |
        CONTAINER_CMD="bash scripts/run.sh" \
          IMAGE_NAME="${{ env.IMAGE_NAME }}" \
          VERSION="${{ env.IMAGE_VERSION }}" \
          SRC_DIR="$GITHUB_WORKSPACE" \
          make docker

    - name: Run Tests
      timeout-minutes: 10
      env:
        PANDO_PREP_LOG_LEVEL: warning
      run: |
        CONTAINER_CMD="make run-tests" \
          IMAGE_NAME="${{ env.IMAGE_NAME }}" \
          VERSION="${{ env.IMAGE_VERSION }}" \
          SRC_DIR="$GITHUB_WORKSPACE" \
          make docker
